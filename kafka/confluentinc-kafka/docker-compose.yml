---
version: '3.5'

networks:
  rmoff_kafka:
    name: rmoff_kafka

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.0
    container_name: zookeeper
    networks:
      - rmoff_kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  broker:
    image: confluentinc/cp-kafka:5.5.0
    container_name: broker
    networks:
      - rmoff_kafka
    # This can help the client in localhost can connect to Kafka in a container.
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

      # https://github.com/confluentinc/cp-docker-images/issues/852
      # https://github.com/confluentinc/demo-scene/blob/master/ksqldb-twitter/docker-compose.yml
      # Adding this will fix problem ""org.springframework.transaction.CannotCreateTransactionException: Could not create Kafka transaction; nested exception is org.apache.kafka.common.errors.TimeoutException: Timeout expired after 60000milliseconds while awaiting InitProducerId"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      # If missing this, it will cause infinite messages "Discovered transaction coordinator localhost:9092 (id: 1 rack: null)"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100

#  client:
#    image: python_kafka_test_client
#    container_name: python_kafka_test_client
#    depends_on:
#      - broker
#    networks:
#      - rmoff_kafka
#    entrypoint:
#      - bash
#      - -c
#      - |
#        echo 'Giving Kafka a bit of time to start upâ€¦'
#        sleep 30
#        # Run the client code
#        python /python_kafka_test_client.py broker:9092